name: MIXER

on:
  workflow_dispatch:
    inputs:
      voice_url:
        description: "URL озвучки (mp3/wav)"
        required: true
      intro_url:
        description: "URL интро (mp3/wav)"
        required: true
      outro_url:
        description: "URL аутро (mp3/wav)"
        required: true
      bg_url:
        description: "URL подложки (mp3/wav)"
        required: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Download input files
        run: |
          curl -L "$VOICE_URL" -o voice.mp3
          curl -L "$INTRO_URL" -o intro.mp3
          curl -L "$OUTRO_URL" -o outro.mp3
          curl -L "$BG_URL" -o bg.mp3
        env:
          VOICE_URL: ${{ github.event.inputs.voice_url }}
          INTRO_URL: ${{ github.event.inputs.intro_url }}
          OUTRO_URL: ${{ github.event.inputs.outro_url }}
          BG_URL: ${{ github.event.inputs.bg_url }}

      - name: Normalize all to 44.1kHz stereo (WAV)
        run: |
          ffmpeg -y -i voice.mp3 -ar 44100 -ac 2 voice.wav
          ffmpeg -y -i intro.mp3 -ar 44100 -ac 2 intro.wav
          ffmpeg -y -i outro.mp3 -ar 44100 -ac 2 outro.wav
          ffmpeg -y -i bg.mp3 -ar 44100 -ac 2 bg.wav

      - name: Lower intro and outro volumes (+fades)
        run: |
          ffmpeg -y -i intro.wav -filter_complex "volume=-6dB,afade=t=out:st=4:d=1" intro_fix.wav
          ffmpeg -y -i outro.wav -filter_complex "volume=-6dB,afade=t=in:st=0:d=1" outro_fix.wav

      - name: Loop & trim background to voice duration
        run: |
          VOICE_DUR=$(ffprobe -v error -show_entries format=duration -of default=noprint_wrappers=1:nokey=1 voice.wav)
          ffmpeg -y -stream_loop -1 -i bg.wav -t $VOICE_DUR bg_loop.wav

      - name: Mix voice + bg (sidechain ducking)
        env:
          VOICE_DB: "1.5"
          BG_DB: "-10"
        run: |
          ffmpeg -y -i voice.wav -i bg_loop.wav \
            -filter_complex "\
              [1:a]volume=${BG_DB}dB,highpass=f=120,lowpass=f=8000[bg]; \
              [0:a]volume=${VOICE_DB}dB[vc]; \
              [bg][vc]sidechaincompress=threshold=0.1:ratio=8:attack=5:release=250:makeup=4:detection=peak[bgduck]; \
              [vc][bgduck]amix=inputs=2:duration=first:dropout_transition=2,aresample=async=1:first_pts=0[aout]" \
            -map "[aout]" -ar 44100 -ac 2 voice_mix.wav

      - name: Concat intro + mixed + outro
        run: |
          printf "file 'intro_fix.wav'\nfile 'voice_mix.wav'\nfile 'outro_fix.wav'\n" > list.txt
          ffmpeg -y -f concat -safe 0 -i list.txt -c copy result_temp.wav

      - name: Loudness normalize to -16 LUFS
        run: |
          ffmpeg -y -i result_temp.wav -filter_complex \
            "loudnorm=I=-16:TP=-1.5:LRA=11:measured_I=-23:measured_LRA=7:measured_TP=-2:measured_thresh=-33:offset=0:linear=true:print_format=summary" \
            -ar 44100 -ac 2 -b:a 192k result.mp3

      - name: Upload to Cloudinary (unsigned preset)
        env:
          CLD_CLOUD_NAME: ${{ secrets.CLD_CLOUD_NAME }}
          CLD_UPLOAD_PRESET: ${{ secrets.CLD_UPLOAD_PRESET }}
        run: |
          if [ -z "$CLD_CLOUD_NAME" ] || [ -z "$CLD_UPLOAD_PRESET" ]; then
            echo "❌ Missing Cloudinary secrets"; exit 1
          fi
          curl -s -X POST "https://api.cloudinary.com/v1_1/$CLD_CLOUD_NAME/auto/upload" \
            -F file=@result.mp3 \
            -F upload_preset=$CLD_UPLOAD_PRESET \
            -F folder=prokis \
            -o cld.json
          cat cld.json
          URL=$(jq -r '.secure_url' cld.json)
          if [ -z "$URL" ] || [ "$URL" = "null" ]; then
            echo "❌ Upload failed"; exit 1
          fi
          echo "FINAL_URL=$URL" >> $GITHUB_ENV
          echo "✅ Uploaded: $URL"

      - name: Callback to Make
        env:
          MAKE_CALLBACK_URL: ${{ secrets.MAKE_CALLBACK_URL }}
        run: |
          curl -fSL -X POST -H "Content-Type: application/json" \
            -d "{\"final_url\":\"$FINAL_URL\"}" "$MAKE_CALLBACK_URL"
