name: MIXER

on:
  workflow_dispatch:
    inputs:
      voice_url:
        description: 'URL mp3/wav с голосом (Cloudinary secure_url)'
        required: true
  repository_dispatch:
    types: [mix_audio]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Install ffmpeg & jq
        run: |
          sudo apt-get update
          sudo apt-get install -y ffmpeg jq

      - name: Get VOICE_URL
        run: |
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            echo "VOICE_URL=${{ github.event.inputs.voice_url }}" >> $GITHUB_ENV
          else
            echo "VOICE_URL=${{ github.event.client_payload.voice_url }}" >> $GITHUB_ENV
          fi
          echo "VOICE_URL=$VOICE_URL"

      - name: Download input files
        env:
          INTRO_URL: ${{ secrets.INTRO_URL }}
          OUTRO_URL: ${{ secrets.OUTRO_URL }}
          BG_URL:    ${{ secrets.BG_URL }}
        run: |
          curl -fSL "$VOICE_URL" -o voice.mp3
          curl -fSL "$INTRO_URL" -o intro.mp3
          curl -fSL "$OUTRO_URL" -o outro.mp3
          curl -fSL "$BG_URL"    -o bg.mp3
          ls -lh

      - name: Convert all to WAV 44.1kHz stereo
        run: |
          ffmpeg -y -i intro.mp3  -ar 44100 -ac 2 intro.wav
          ffmpeg -y -i outro.mp3  -ar 44100 -ac 2 outro.wav
          ffmpeg -y -i bg.mp3     -ar 44100 -ac 2 bg.wav
          ffmpeg -y -i voice.mp3  -ar 44100 -ac 2 voice.wav

      - name: Lower intro and outro volumes
        run: |
          ffmpeg -y -i intro.wav -af "volume=-6dB" intro_low.wav
          ffmpeg -y -i outro.wav -af "volume=-6dB" outro_low.wav

      - name: Loop background to voice duration
        run: |
          VDUR=$(ffprobe -v error -show_entries format=duration -of csv=p=0 voice.wav)
          ffmpeg -y -stream_loop -1 -i bg.wav -t "$VDUR" bg_loop.wav

      - name: Mix voice and background (bg louder)
        run: |
          ffmpeg -y -i voice.wav -i bg_loop.wav \
            -filter_complex "[0:a]volume=2dB[voice];[1:a]volume=-14dB[bg];[voice][bg]amix=inputs=2:duration=first:dropout_transition=2,aresample=async=1:first_pts=0[aout]" \
            -map "[aout]" -ar 44100 -ac 2 voice_mix.wav

      - name: Concat intro + mixed + outro
        run: |
          ffmpeg -y -i intro_low.wav -i voice_mix.wav -i outro_low.wav \
            -filter_complex "[0:a][1:a][2:a]concat=n=3:v=0:a=1[a]" \
            -map "[a]" -ar 44100 -b:a 160k result.mp3

      - name: Loudness normalize to -16 LUFS
        run: |
          ffmpeg -y -i result.mp3 -filter:a "loudnorm=I=-16:TP=-1.5:LRA=11" -ar 44100 -b:a 160k final.mp3
          mv final.mp3 result.mp3

      - name: Upload to Cloudinary
        env:
          CLD_CLOUD_NAME:    ${{ secrets.CLD_CLOUD_NAME }}
          CLD_UPLOAD_PRESET: ${{ secrets.CLD_UPLOAD_PRESET }}
        run: |
          URL=$(curl -s -X POST "https://api.cloudinary.com/v1_1/$CLD_CLOUD_NAME/auto/upload" \
            -F file=@result.mp3 \
            -F upload_preset=$CLD_UPLOAD_PRESET \
            -F folder=prokis | jq -r '.secure_url')
          echo "FINAL_URL=$URL" >> $GITHUB_ENV
          echo "Uploaded: $URL"

      - name: Callback to Make
        env:
          MAKE_CALLBACK_URL: ${{ secrets.MAKE_CALLBACK_URL }}
        run: |
          curl -s -X POST -H "Content-Type: application/json" \
            -d "{\"final_url\":\"$FINAL_URL\"}" "$MAKE_CALLBACK_URL"
